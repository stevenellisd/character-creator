{"version":3,"sources":["Character.js","App.js","index.js"],"names":["Character","props","handleNameChange","event","setState","name","target","value","state","str","dex","con","int","wis","cha","class","race","background","this","console","log","character","TextField","required","id","label","onChange","index","Button","style","margin","variant","color","onClick","randomizeName","rollSkills","setDefaultSkills","Autocomplete","freeSolo","options","getOptionLabel","option","width","onInputChange","handleClassChange","renderInput","params","handleRaceChange","React","Component","App","i","new_characters","characters","localStorage","getItem","JSON","parse","Accordion","AccordionSummary","expandIcon","AccordionDetails","map","renderCharacter","concat","first_names","last_names","Math","floor","random","length","rolls","push","rollDie","sort","skillRoll","setItem","stringify","removeItem","className","renderCharacters","position","right","Fab","newCharacter","save","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81b0ecdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"Your Name\",\r\n            str: 15,\r\n            dex: 14,\r\n            con: 13,\r\n            int: 12,\r\n            wis: 10,\r\n            cha: 8,\r\n            class: \"Bard\",\r\n            race: \"Elf\",\r\n            background: \"\",\r\n        };\r\n    }\r\n\r\n    getName() {\r\n        return this.state.name;\r\n    }\r\n\r\n    handleNameChange =\r\n        (event) => {\r\n            this.setState({\r\n                name: event.target.value,\r\n            });\r\n        };\r\n\r\n    render() {\r\n        const classes = [\"Bard\", \"Cleric\", \"Druid\", \"Fighter\"];\r\n        const races = [\"Dwarf\", \"Elf\", \"Gnome\", \"Human\"];\r\n        console.log(this.props.character);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <TextField required id=\"name\" label=\"Name\" value={this.props.character.name} onChange={ (event) => this.props.handleNameChange(event, this.props.character.index)} />\r\n                </div>\r\n                <div>\r\n                    <Button style={{margin: '4px'}} variant=\"contained\" color=\"primary\" onClick={() => this.props.randomizeName(this.props.character.index)}>Randomize Name</Button>\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"str\" label=\"Strength\" value={this.props.character.str} />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"dex\" label=\"Dexterity\" value={this.props.character.dex} />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"con\" label=\"Constitution\" value={this.props.character.con} />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"int\" label=\"Intelligence\" value={this.props.character.int} />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"wis\" label=\"Wisdom\" value={this.props.character.wis} />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"cha\" label=\"Charisma\" value={this.props.character.cha} />\r\n                </div>\r\n                <div>\r\n                    <Button style={{margin: '4px'}} variant=\"contained\" color=\"primary\" onClick={() => this.props.rollSkills(this.props.index)}>Roll Skills</Button>\r\n                </div>\r\n                <div>\r\n                    <Button style={{margin: '4px'}} variant=\"contained\" color=\"primary\" onClick={() => this.props.setDefaultSkills(this.props.index)}>Default Skills</Button>\r\n                </div>\r\n                <div>\r\n                    <Autocomplete\r\n                        id=\"class\"\r\n                        freeSolo\r\n                        options={classes}\r\n                        getOptionLabel={(option) => option}\r\n                        style={{ width: 300, margin: 8 }}\r\n                        onInputChange={ (event, value) => this.props.handleClassChange(event, value, this.props.character.index)}\r\n                        value={this.props.character.class}\r\n                        renderInput={(params) => <TextField {...params} label=\"Class\" variant=\"outlined\" value={this.props.character.class}  />}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Autocomplete\r\n                        id=\"race\"\r\n                        freeSolo\r\n                        options={races}\r\n                        getOptionLabel={(option) => option}\r\n                        style={{ width: 300, margin: 8 }}\r\n                        onInputChange={ (event, value) => this.props.handleRaceChange(event, value, this.props.character.index)}\r\n                        value={this.props.character.race}\r\n                        renderInput={(params) => <TextField {...params} label=\"Race\" variant=\"outlined\" value={this.props.character.race}  />}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Character;\r\n","import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Fab } from '@material-ui/core';\nimport Character from './Character';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    /**/\n    if (localStorage.getItem('characters') !== null) {\n      this.state = {\n        characters: JSON.parse(localStorage.getItem('characters')),\n        index: localStorage.getItem('index'),\n      }\n    } else {\n      this.state = {\n        characters: [],\n        index: 0,\n      };\n    }\n       \n\n  }\n\n  renderCharacter(character) {\n    return (\n      <Accordion style={{ margin: '8px'}}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} style={{background: 'lightblue'}}>\n          <p>{character.name}</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Character\n          character={character}\n          randomizeName={() => this.randomizeName(character.index)}\n          rollSkills={() => this.rollSkills(character.index)}\n          setDefaultSkills={() => this.setDefaultSkills(character.index)}\n          handleNameChange={(event, i) => this.handleNameChange(event, i)}\n          handleRaceChange={(event, value, i) => this.handleRaceChange(event, value, i)}\n          handleClassChange={(event, value, i) => this.handleClassChange(event, value, i)} />\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n\n  renderCharacters() {\n    return this.state.characters.map((character) =>\n      <div>{this.renderCharacter(character)}</div>\n    );\n  }\n\n  newCharacter() {\n    this.setState({\n      characters: this.state.characters.concat({\n        name: \"Your Name\",\n        str: 15,\n        dex: 14,\n        con: 13,\n        int: 12,\n        wis: 10,\n        cha: 8,\n        class: \"Bard\",\n        race: \"Elf\",\n        background: \"\",\n        index: this.state.index,\n      }),\n      index: this.state.index + 1,\n    });\n  }\n\n  randomizeName(i) {\n    const first_names = [\"Adana\", \"Bazel\", \"Chavorad\", \"Didelot\", \"Elina\", \"Florjan\", \"Gelbard\", \"Simon\"];\n    const last_names = [\"Ashbluff\", \"Belmont\", \"Covenbreath\", \"Dragoncutter\", \"Elfscribe\"];\n    const first_name = first_names[Math.floor(Math.random() * first_names.length)];\n    const last_name = last_names[Math.floor(Math.random() * last_names.length)];\n    const name = first_name + \" \" + last_name;\n    let new_characters = this.state.characters;\n    new_characters[i].name = name;\n    this.setState({\n      characters: new_characters,\n    });\n  }\n\n  rollDie() {\n    return Math.floor(Math.random() * 6) + 1;\n  }\n\n  skillRoll() {\n    let rolls = [];\n    for (let i = 0; i < 4; i++) {\n      rolls.push(this.rollDie());\n    }\n    rolls.sort();\n    return rolls[1] + rolls[2] + rolls[3];\n  }\n\n  rollSkills(i) {\n    let new_characters = this.state.characters;\n    new_characters[i].str = this.skillRoll();\n    new_characters[i].dex = this.skillRoll();\n    new_characters[i].con = this.skillRoll();\n    new_characters[i].int = this.skillRoll();\n    new_characters[i].wis = this.skillRoll();\n    new_characters[i].cha = this.skillRoll();\n\n    this.setState({\n      characters: new_characters,\n    });\n  }\n\n  setDefaultSkills(i) {\n    let new_characters = this.state.characters;\n    new_characters[i].str = 15;\n    new_characters[i].dex = 14;\n    new_characters[i].con = 13;\n    new_characters[i].int = 12;\n    new_characters[i].wis = 10;\n    new_characters[i].cha = 8;\n\n    this.setState({\n      characters: new_characters,\n    });\n  }\n\n  handleNameChange =\n  (event, i) => {\n      let new_characters = this.state.characters;\n      new_characters[i].name = event.target.value;\n      this.setState({\n          characters: new_characters,\n      });\n  };\n\n  handleClassChange =\n  (event, value, i) => {\n      let new_characters = this.state.characters;\n      new_characters[i].class = value;\n      this.setState({\n          characters: new_characters,\n      });\n  };\n\n  handleRaceChange =\n  (event, value, i) => {\n      let new_characters = this.state.characters;\n      new_characters[i].race = value;\n      this.setState({\n          characters: new_characters,\n      });\n  };\n\n  save() {\n    localStorage.setItem('characters', JSON.stringify(this.state.characters));\n    localStorage.setItem('index', this.state.index);\n  }\n\n  delete() {\n    localStorage.removeItem('characters');\n    localStorage.removeItem('index');\n    this.setState({\n      characters: [],\n      index: 0,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {this.renderCharacters()}\n        </div>\n        <div style={{ position: 'absolute', right: 0, margin: 8 }}>\n          <Fab color=\"primary\" aria-label=\"add\" onClick={() => this.newCharacter()}>\n            <AddIcon />\n          </Fab>\n          <Fab color=\"primary\" aria-label=\"add\" onClick={() => this.save()} style={{margin: 8 }}>\n            <SaveIcon />\n          </Fab>\n          <Fab color=\"primary\" aria-label=\"add\" onClick={() => this.delete()}>\n            <DeleteIcon />\n          </Fab>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}